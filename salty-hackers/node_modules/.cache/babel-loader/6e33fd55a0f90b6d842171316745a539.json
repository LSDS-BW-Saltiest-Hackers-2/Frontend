{"ast":null,"code":"var _jsxFileName = \"/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = localStorage.getItem('token');\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => {\n      if (token) {\n        return /*#__PURE__*/React.createElement(Component, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 24\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/utils/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","token","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAsC;AACvD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,sBACI,oBAAC,KAAD,oBACIH,IADJ;AAEA,IAAA,MAAM,EAAE,MAAM;AACV,UAAIC,KAAJ,EAAW;AACP,4BAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACH,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAWH,CAbD;;AAeA,eAAeJ,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest}) => {\n    const token = localStorage.getItem('token');\n    return (\n        <Route\n        {...rest}\n        render={() => {\n            if (token) {\n                return <Component />\n            } else {\n                return <Redirect to='/login' />;\n            }\n        }}/>\n    )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}