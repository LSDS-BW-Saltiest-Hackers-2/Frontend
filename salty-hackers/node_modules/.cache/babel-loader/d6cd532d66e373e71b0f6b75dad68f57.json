{"ast":null,"code":"var _jsxFileName = \"/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/components/Feed/CommentFeed.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Comment from \"./Comment\";\nimport { Route } from 'react-router-dom';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport './CommentFeed.css';\nlet myElement = null;\nlet myTween = null;\ncom;\n\nfunction CommentFeed() {\n  const [comments, addComments] = useState([]); //get comments \n\n  useEffect(() => {\n    axiosWithAuth().get(`https://saltyhackers2.herokuapp.com/users/1/AllComments`).then(res => {\n      console.log('this should only render once!');\n      console.log(res);\n      addComments(res.data);\n      console.log(comments);\n    }).catch(err => {\n      console.log('nope');\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, {\n    path: \"/feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, comments.map(comment => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.id,\n      info: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }\n    });\n  }))));\n}\n\nexport default CommentFeed;","map":{"version":3,"sources":["/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/components/Feed/CommentFeed.js"],"names":["React","useEffect","useState","Comment","Route","axiosWithAuth","myElement","myTween","com","CommentFeed","comments","addComments","get","then","res","console","log","data","catch","err","map","comment","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,mBAAP;AAEA,IAAIC,SAAS,GAAG,IAAhB;AACA,IAAIC,OAAO,GAAG,IAAd;AAEAC,GAAG;;AAKH,SAASC,WAAT,GAAuB;AAEnB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAFmB,CAInB;;AACID,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,aAAa,GAAGO,GAAhB,CAAqB,yDAArB,EACCC,IADD,CACMC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAH,MAAAA,WAAW,CAACG,GAAG,CAACG,IAAL,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH,KAND,EAOCQ,KAPD,CAOOC,GAAG,IAAI;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,KATL;AAUC,GAXI,EAWF,EAXE,CAAT;AAaJ,sBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQN,QAAQ,CAACU,GAAT,CAAaC,OAAO,IAAI;AACxB,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AAA0B,MAAA,IAAI,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAHR,CADJ,CADJ,CADJ;AAkBH;;AAGD,eAAeZ,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Comment from \"./Comment\"\nimport { Route } from 'react-router-dom';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth'\n\nimport './CommentFeed.css'\n\nlet myElement = null\nlet myTween = null\n\ncom\n\n\n\n\nfunction CommentFeed() {\n\n    const [ comments, addComments ] = useState([])\n\n    //get comments \n        useEffect(() => { \n            axiosWithAuth().get(`https://saltyhackers2.herokuapp.com/users/1/AllComments`)\n            .then(res => {\n                console.log('this should only render once!')\n                console.log(res)\n                addComments(res.data)\n                console.log(comments)\n            })\n            .catch(err => {\n                console.log('nope')\n                })\n            }, [])\n\n    return (\n        <Route path='/feed'>\n            <div className='feed-container'>\n                <div className='feed-list'>\n\n                    {\n                        comments.map(comment => {\n                        return <Comment key={comment.id} info={comment}/>\n                        })\n\n                    }\n                        \n                </div>\n            </div>\n        \n        </Route>\n        \n    )\n}\n\n\nexport default CommentFeed"]},"metadata":{},"sourceType":"module"}