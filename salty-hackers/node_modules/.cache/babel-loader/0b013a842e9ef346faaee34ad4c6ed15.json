{"ast":null,"code":"var _jsxFileName = \"/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/components/Feed/CommentFeed.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Comment from \"./Comment\";\nimport { Route } from 'react-router-dom';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport './CommentFeed.css';\nimport { TimelineLite, TweenLite } from 'gsap';\n\nfunction CommentFeed() {\n  const [comments, addComments] = useState([]);\n  let myElement = useRef();\n  let myTween = new TimelineLite({\n    paused: true\n  });\n  useEffect(() => {\n    myTween = TweenLite.staggerTo(myElement, 0.5, {\n      y: 0,\n      autoAlpha: 1\n    }, 0.1);\n    console.log('it ran!');\n  }, []); //get comments \n\n  useEffect(() => {\n    axiosWithAuth().get(`https://saltyhackers2.herokuapp.com/users/1/AllComments`).then(res => {\n      console.log('this should only render once!');\n      console.log(res);\n      addComments(res.data);\n      console.log(comments);\n    }).catch(err => {\n      console.log('nope');\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, {\n    path: \"/feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, comments.map((comment, index) => {\n    return /*#__PURE__*/React.createElement(Comment, {\n      ref: myElement,\n      key: comment.id,\n      info: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }\n    });\n  }))));\n}\n\nexport default CommentFeed;","map":{"version":3,"sources":["/Users/jamiesullivan/lambda/Frontend/salty-hackers/src/components/Feed/CommentFeed.js"],"names":["React","useEffect","useState","useRef","Comment","Route","axiosWithAuth","TimelineLite","TweenLite","CommentFeed","comments","addComments","myElement","myTween","paused","staggerTo","y","autoAlpha","console","log","get","then","res","data","catch","err","map","comment","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,mBAAP;AAEA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,MAAxC;;AAQA,SAASC,WAAT,GAAuB;AAEnB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAGA,MAAIU,SAAS,GAAGT,MAAM,EAAtB;AACA,MAAIU,OAAO,GAAG,IAAIN,YAAJ,CAAiB;AAACO,IAAAA,MAAM,EAAE;AAAT,GAAjB,CAAd;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,GAAGL,SAAS,CAACO,SAAV,CAAoBH,SAApB,EAA+B,GAA/B,EAAoC;AAACI,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,SAAS,EAAE;AAAlB,KAApC,EAA0D,GAA1D,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,GAHQ,EAGN,EAHM,CAAT,CARmB,CAgBnB;;AACIlB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa,GAAGc,GAAhB,CAAqB,yDAArB,EACCC,IADD,CACMC,GAAG,IAAI;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAX,MAAAA,WAAW,CAACW,GAAG,CAACC,IAAL,CAAX;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACH,KAND,EAOCc,KAPD,CAOOC,GAAG,IAAI;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,KATL;AAUC,GAXI,EAWF,EAXE,CAAT;AAaJ,sBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQT,QAAQ,CAACgB,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACjC,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEhB,SAAd;AAAyB,MAAA,GAAG,EAAEe,OAAO,CAACE,EAAtC;AAA0C,MAAA,IAAI,EAAEF,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC,GAFD,CAHR,CADJ,CADJ,CADJ;AAoBH;;AAGD,eAAelB,WAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Comment from \"./Comment\"\nimport { Route } from 'react-router-dom';\nimport { axiosWithAuth } from '../../utils/axiosWithAuth'\n\nimport './CommentFeed.css'\n\nimport { TimelineLite, TweenLite } from 'gsap'\n\n\n\n\n\n\n\nfunction CommentFeed() {\n\n    const [ comments, addComments ] = useState([])\n\n\n    let myElement = useRef();\n    let myTween = new TimelineLite({paused: true});\n\n    useEffect(() => {\n        myTween = TweenLite.staggerTo(myElement, 0.5, {y: 0, autoAlpha: 1}, 0.1);\n        console.log('it ran!')\n    }, []);\n\n\n   \n\n    //get comments \n        useEffect(() => { \n            axiosWithAuth().get(`https://saltyhackers2.herokuapp.com/users/1/AllComments`)\n            .then(res => {\n                console.log('this should only render once!')\n                console.log(res)\n                addComments(res.data)\n                console.log(comments)\n            })\n            .catch(err => {\n                console.log('nope')\n                })\n            }, [])\n\n    return (\n        <Route path='/feed'>\n            <div className='feed-container'>\n                <div className='feed-list'>\n\n                    {\n                        comments.map((comment, index) => {\n                        return <Comment ref={myElement} key={comment.id} info={comment} />\n                        })\n\n                    }\n\n                    \n                        \n                </div>\n            </div>\n        \n        </Route>\n        \n    )\n}\n\n\nexport default CommentFeed"]},"metadata":{},"sourceType":"module"}